#!/usr/bin/env php
<?php

declare(strict_types=1);

namespace webignition\BasilRunnerDelegator\Bin;

const VERSION = 'dev-master';

use Monolog\Formatter\JsonFormatter;
use Monolog\Handler\StreamHandler;
use Monolog\Logger;
use Symfony\Component\Console\Output\StreamOutput;
use webignition\BasilRunnerDelegator\Command\RunCommand;
use webignition\BasilRunnerDelegator\RunnerClient\ConfigurationFactory;
use webignition\BasilRunnerDelegator\RunnerClient\Factory as RunnerClientFactory;
use webignition\BasilRunnerDelegator\Services\RunnerClientHandlerFactory;
use webignition\SingleCommandApplicationFactory\Factory as SingleCommandApplicationFactory;
use webignition\TcpCliProxyClient\Services\ConnectionStringFactory;
use webignition\YamlDocumentGenerator\YamlGenerator;

require dirname(__DIR__) . '/vendor/autoload.php';

$logger = new Logger('runner-logger');
$logHandler = new StreamHandler(__DIR__ . '/debug.log');
$logHandler->setFormatter(new JsonFormatter());

$output = new StreamOutput(STDOUT);

$runnerClientHandler = (new RunnerClientHandlerFactory())->create($output);
$runnerClientFactory = new RunnerClientFactory(
        new ConfigurationFactory(),
        new ConnectionStringFactory(),
        $runnerClientHandler
);

$logger->pushHandler($logHandler);

$application = (new SingleCommandApplicationFactory())->create(
    new RunCommand(
        $runnerClientFactory->loadFromEnv($_SERVER),
        $logger,
        new YamlGenerator()
    ),
    VERSION
);

$exitCode = $application->run(null, $output);

exit($exitCode);
